def getData(self, cmd):
  try:
      start = time.time()
      self.sendCMD(0,cmd,[])
      while True:
          header = self.ser.read()
          if header == '$':
              header = header+self.ser.read(2)
              break
      datalength = struct.unpack('<b', self.ser.read())[0]
      code = struct.unpack('<b', self.ser.read())
      data = self.ser.read(datalength)
      temp = struct.unpack('<'+'h'*(datalength/2),data)
      self.ser.flushInput()
      self.ser.flushOutput()
      elapsed = time.time() - start
      if cmd == MultiWii.ATTITUDE:
          self.attitude['angx']=float(temp[0]/10.0)
          self.attitude['angy']=float(temp[1]/10.0)
          self.attitude['heading']=float(temp[2])
          self.attitude['elapsed']=round(elapsed,3)
          self.attitude['timestamp']="%0.2f" % (time.time(),) 
          return self.attitude
      elif cmd == MultiWii.RC:
          self.rcChannels['roll']=temp[0]
          self.rcChannels['pitch']=temp[1]
          self.rcChannels['yaw']=temp[2]
          self.rcChannels['throttle']=temp[3]
          self.rcChannels['elapsed']=round(elapsed,3)
          self.rcChannels['timestamp']="%0.2f" % (time.time(),)
          return self.rcChannels
      elif cmd == MultiWii.RAW_IMU:
          self.rawIMU['ax']=float(temp[0])
          self.rawIMU['ay']=float(temp[1])
          self.rawIMU['az']=float(temp[2])
          self.rawIMU['gx']=float(temp[3])
          self.rawIMU['gy']=float(temp[4])
          self.rawIMU['gz']=float(temp[5])
          self.rawIMU['elapsed']=round(elapsed,3)
          self.rawIMU['timestamp']="%0.2f" % (time.time(),)
          return self.rawIMU
      elif cmd == MultiWii.MOTOR:
          self.motor['m1']=float(temp[0])
          self.motor['m2']=float(temp[1])
          self.motor['m3']=float(temp[2])
          self.motor['m4']=float(temp[3])
          self.motor['elapsed']="%0.3f" % (elapsed,)
          self.motor['timestamp']="%0.2f" % (time.time(),)
          return self.motor
      else:
          return "No return error!"
  except Exception, error:
      #print error
      pass
